{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/oliverw/giffgaff/ui-prototypes-next/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n// import App from 'next/app'\n// import NavContext from '../components/NavContext';\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  // const [open, setOpen] = useState(false);\n  return (// <NavContext.Provider value={{ open: open, setOpen: setOpen }} >\n    __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })) // </NavContext.Provider>\n\n  );\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/oliverw/giffgaff/ui-prototypes-next/pages/_app.js"],"names":["MyApp","Component","pageProps"],"mappings":";;;;;AAAA;AACA;AAEA,SAASA,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC;AAEA,SACI;AACA,UAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CAGI;;AAHJ;AAKH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\n// import NavContext from '../components/NavContext';\n\nfunction MyApp({ Component, pageProps }) {\n    // const [open, setOpen] = useState(false);\n\n    return (\n        // <NavContext.Provider value={{ open: open, setOpen: setOpen }} >\n        <Component {...pageProps} />\n        // </NavContext.Provider>\n    )\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}