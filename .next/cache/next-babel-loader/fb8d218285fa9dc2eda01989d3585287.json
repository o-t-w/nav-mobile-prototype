{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/oliverw/giffgaff/ui-prototypes-next/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport NavContext from '../components/NavContext';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  return;\n\n  __jsx(NavContext.Provider, {\n    value: {\n      open: open,\n      setOpen: setOpen\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/oliverw/giffgaff/ui-prototypes-next/pages/_app.js"],"names":["NavContext","MyApp","Component","pageProps","useState","open","setOpen"],"mappings":";;;;;AAAA;AACA,OAAOA,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBACbC,QAAQ,CAAC,KAAD,CADK;AAAA;AAAA,MAC9BC,IAD8B;AAAA,MACxBC,OADwB;;AAGrC;;AACA,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,OAAO,EAAEA;AAAvB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAGH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["// import App from 'next/app'\nimport NavContext from '../components/NavContext';\n\nfunction MyApp({ Component, pageProps }) {\n    const [open, setOpen] = useState(false);\n\n    return\n    <NavContext.Provider value={{ open: open, setOpen: setOpen }} >\n        <Component {...pageProps} />\n    </NavContext.Provider>\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}